// server.js
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");

const app = express();
app.use(express.json());
app.use(cors());

// MongoDB connection
mongoose.connect("mongodb://127.0.0.1:27017/todoApp", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

// Note schema
const noteSchema = new mongoose.Schema({
  title: String,
  completed: { type: Boolean, default: false },
});

const Note = mongoose.model("Note", noteSchema);

// Routes
// Get all notes
app.get("/api/notes", async (req, res) => {
  const notes = await Note.find();
  res.json(notes);
});

// Add new note
app.post("/api/notes", async (req, res) => {
  const newNote = new Note({
    title: req.body.title,
  });
  await newNote.save();
  res.json(newNote);
});

// Update note
app.put("/api/notes/:id", async (req, res) => {
  const updatedNote = await Note.findByIdAndUpdate(
    req.params.id,
    req.body,
    { new: true }
  );
  res.json(updatedNote);
});

// Delete note
app.delete("/api/notes/:id", async (req, res) => {
  await Note.findByIdAndDelete(req.params.id);
  res.json({ message: "Note deleted" });
});

// Start server
app.listen(5000, () => console.log("Server running on http://localhost:5000"));
