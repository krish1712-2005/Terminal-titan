<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Styled Product Card List — Vanilla JS</title>
  <style>
    :root{
      --bg:#0b0c10;           /* page background */
      --panel:#0f1117;        /* cards & panels */
      --panel-2:#11131a;
      --text:#e6e6e6;         /* main text */
      --muted:#9aa4ad;        /* muted text */
      --brand:#6ee7b7;        /* accent */
      --brand-2:#22d3ee;      /* alt accent */
      --border:#232633;       /* subtle borders */
      --danger:#ff6b6b;
      --warning:#fbbf24;
      --radius:18px;
      --shadow:0 10px 30px rgba(0,0,0,.35);
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0; font-family:ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji","Segoe UI Emoji";
      color:var(--text); background:linear-gradient(180deg,#0a0b0f, #0b0c10 40%);
    }

    .container{max-width:1200px;margin:0 auto;padding:24px}

    /* Header */
    .header{display:flex;gap:16px;align-items:center;justify-content:space-between;margin-bottom:20px;flex-wrap:wrap}
    .title{display:flex;align-items:center;gap:10px}
    .sparkle{width:20px;height:20px;background:conic-gradient(from 0deg, var(--brand), var(--brand-2), #a78bfa, var(--brand));border-radius:50%;filter:drop-shadow(0 0 10px rgba(110,231,183,.6))}
    h1{font-size:28px;margin:0}

    /* Toolbar */
    .toolbar{display:flex;gap:10px;align-items:center;flex-wrap:wrap}
    .field{display:flex;align-items:center;background:var(--panel);padding:8px 10px;border:1px solid var(--border);border-radius:999px;gap:10px}
    .field input, .field select{
      background:transparent;border:none;outline:none;color:var(--text);
    }
    .field input::placeholder{color:var(--muted)}
    .pill{padding:8px 12px;border-radius:999px;border:1px solid var(--border);background:var(--panel);color:var(--text)}
    .range-wrap{display:flex;align-items:center;gap:10px;padding:8px 14px;border-radius:999px;border:1px solid var(--border);background:var(--panel)}
    .range-wrap input{accent-color:var(--brand)}
    .tag{font-size:12px;color:var(--muted)}

    /* Grid */
    .grid{display:grid;grid-template-columns:repeat(1, minmax(0,1fr));gap:16px}
    @media (min-width:640px){.grid{grid-template-columns:repeat(2, minmax(0,1fr));}}
    @media (min-width:980px){.grid{grid-template-columns:repeat(3, minmax(0,1fr));}}

    /* Card */
    .card{position:relative;background:linear-gradient(180deg,var(--panel),var(--panel-2));border:1px solid var(--border);border-radius:var(--radius);overflow:hidden;box-shadow:var(--shadow);transition:transform .2s ease, box-shadow .2s ease}
    .card:hover{transform:translateY(-2px); box-shadow:0 16px 40px rgba(0,0,0,.45)}
    .thumb{position:relative;height:210px;background:#0b0c10;overflow:hidden}
    .thumb img{width:100%;height:100%;object-fit:cover;display:block;filter:saturate(1.05)}
    .badge{position:absolute;top:12px;left:12px;background:linear-gradient(135deg,var(--brand), var(--brand-2));color:#081016;border-radius:999px;padding:6px 10px;font-weight:700;font-size:12px}
    .oos{position:absolute;top:12px;right:12px;background:rgba(255,107,107,.9);color:#fff;border-radius:8px;padding:6px 8px;font-size:12px}

    .content{padding:14px 14px 10px}
    .row{display:flex;justify-content:space-between;align-items:center;gap:8px}
    .title-2{font-size:16px;font-weight:600;line-height:1.3;margin:0 0 6px}
    .muted{color:var(--muted);font-size:13px}

    .stars{display:flex;align-items:center;gap:6px}
    .stars svg{width:16px;height:16px}
    .colors{display:flex;gap:6px}
    .dot{width:12px;height:12px;border-radius:50%;border:2px solid rgba(255,255,255,.7);box-shadow:0 1px 0 rgba(0,0,0,.4)}

    .price{font-size:18px;font-weight:700}

    .footer{display:flex;gap:8px;padding:10px 14px 14px}
    .btn{flex:1;display:inline-flex;align-items:center;justify-content:center;gap:8px;padding:10px 12px;border:none;border-radius:12px;background:#151823;color:var(--text);cursor:pointer;transition:transform .12s ease, background .2s ease;border:1px solid var(--border)}
    .btn:hover{transform:translateY(-1px);background:#171b27}
    .btn.primary{background:linear-gradient(135deg,var(--brand), var(--brand-2));color:#081016;font-weight:800;border:none}
    .btn.ghost{background:transparent}
    .btn.liked{outline:2px solid var(--brand);}

    .empty{opacity:.8;border:1px dashed var(--border);border-radius:16px;padding:28px;text-align:center}
  </style>
</head>
<body>
  <div class="container">
    <!-- Header + Controls -->
    <div class="header">
      <div class="title">
        <div class="sparkle" aria-hidden="true"></div>
        <h1>Products</h1>
      </div>
      <div class="toolbar">
        <label class="field" aria-label="Search products">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>
          <input id="search" placeholder="Search products…" />
        </label>

        <select id="category" class="pill" title="Category filter"></select>

        <select id="sort" class="pill" title="Sort by">
          <option value="popular">Most popular</option>
          <option value="price-asc">Price: Low to High</option>
          <option value="price-desc">Price: High to Low</option>
          <option value="new">New arrivals</option>
        </select>

        <div class="range-wrap">
          <span class="tag">Max ₹</span>
          <input id="maxPrice" type="range" min="0" max="10000" value="7000" step="100" />
          <span id="maxPriceVal" class="tag">7000</span>
        </div>
      </div>
    </div>

    <!-- Grid -->
    <div id="grid" class="grid" role="list"></div>
    <div id="empty" class="empty" hidden>Nothing matches your filters.</div>
  </div>

  <template id="cardTemplate">
    <article class="card" role="listitem">
      <div class="thumb">
        <img alt="" />
        <span class="badge"></span>
        <span class="oos" hidden>Out of stock</span>
      </div>
      <div class="content">
        <h2 class="title-2"></h2>
        <div class="row" style="margin-bottom:8px">
          <div class="stars" aria-label="rating"></div>
          <div class="colors"></div>
        </div>
        <div class="row">
          <span class="muted category"></span>
          <span class="price"></span>
        </div>
      </div>
      <div class="footer">
        <button class="btn ghost like" aria-pressed="false" title="Add to wishlist">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
          Wishlist
        </button>
        <button class="btn primary cart">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 12.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path></svg>
          Add to cart
        </button>
      </div>
    </article>
  </template>

  <script>
    // ------- Demo data (replace with your own or fetch from API) ---------
    const PRODUCTS = [
      { id:"p1", title:"Nimbus Runner 2.0 Sneakers", price:4999, category:"Footwear", rating:4.6, reviewCount:213, badge:"Bestseller", img:"https://images.unsplash.com/photo-1542291026-7eec264c27ff?q=80&w=1200&auto=format&fit=crop", colors:["#111827","#e5e7eb","#ef4444"], inStock:true, new:false },
      { id:"p2", title:"AeroFlex Running Tee", price:1299, category:"Apparel", rating:4.2, reviewCount:98, badge:"Trending", img:"https://images.unsplash.com/photo-1549576490-b0b4831ef60a?q=80&w=1200&auto=format&fit=crop", colors:["#0ea5e9","#111827"], inStock:true, new:true },
      { id:"p3", title:"Contour Wireless Headset", price:3499, category:"Electronics", rating:4.8, reviewCount:543, badge:"Staff pick", img:"https://images.unsplash.com/photo-1518441902110-9185ce6a64f9?q=80&w=1200&auto=format&fit=crop", colors:["#111827","#6b7280"], inStock:true, new:false },
      { id:"p4", title:"Drip Brewer Pro Kettle", price:2799, category:"Home & Kitchen", rating:4.4, reviewCount:312, badge:"Limited", img:"https://images.unsplash.com/photo-1514448553121-5162f8e8b1c8?q=80&w=1200&auto=format&fit=crop", colors:["#374151","#d1d5db"], inStock:false, new:false },
      { id:"p5", title:"Skyline City Backpack 28L", price:1999, category:"Bags", rating:4.5, reviewCount:181, badge:"New arrival", img:"https://images.unsplash.com/photo-1520975916090-3105956dac38?q=80&w=1200&auto=format&fit=crop", colors:["#111827","#6b7280","#f59e0b"], inStock:true, new:true },
      { id:"p6", title:"Quartz Analog Watch", price:6499, category:"Accessories", rating:4.7, reviewCount:403, badge:"Premium", img:"https://images.unsplash.com/photo-1524805444758-089113d48a6d?q=80&w=1200&auto=format&fit=crop", colors:["#111827","#9ca3af"], inStock:true, new:false },
      { id:"p7", title:"Aurora Smart Lamp", price:2299, category:"Home & Kitchen", rating:4.1, reviewCount:77, badge:"Deal", img:"https://images.unsplash.com/photo-1507473885765-e6ed057f782c?q=80&w=1200&auto=format&fit=crop", colors:["#eab308","#111827"], inStock:true, new:false },
      { id:"p8", title:"Peak Performance Hoodie", price:2499, category:"Apparel", rating:4.3, reviewCount:221, badge:"Cozy", img:"https://images.unsplash.com/photo-1541099649105-f69ad21f3246?q=80&w=1200&auto=format&fit=crop", colors:["#111827","#64748b"], inStock:true, new:false },
    ];

    // ------- Utilities ---------
    const rupee = n => new Intl.NumberFormat('en-IN',{style:'currency',currency:'INR',maximumFractionDigits:0}).format(n);
    const qs  = (sel, el=document) => el.querySelector(sel);
    const qsa = (sel, el=document) => [...el.querySelectorAll(sel)];

    // ------- Elements ---------
    const grid = qs('#grid');
    const empty = qs('#empty');
    const tpl = qs('#cardTemplate');
    const search = qs('#search');
    const catSel = qs('#category');
    const sortSel = qs('#sort');
    const maxPrice = qs('#maxPrice');
    const maxPriceVal = qs('#maxPriceVal');

    // ------- State ---------
    let wishlist = new Set();

    // Build category options
    const categories = ['all', ...Array.from(new Set(PRODUCTS.map(p=>p.category))).sort()];
    catSel.innerHTML = categories.map(c=>`<option value="${c}">${c[0].toUpperCase()+c.slice(1)}</option>`).join('');

    // Event listeners
    [search, catSel, sortSel, maxPrice].forEach(el=> el.addEventListener('input', render));

    maxPrice.addEventListener('input', ()=>{ maxPriceVal.textContent = maxPrice.value; });

    function getFiltered(){
      const q = (search.value||'').toLowerCase().trim();
      const cat = catSel.value;
      const priceMax = +maxPrice.value;
      let items = PRODUCTS.filter(p=> {
        const inQ = p.title.toLowerCase().includes(q);
        const inC = (cat==='all') || p.category===cat;
        const inP = p.price <= priceMax;
        return inQ && inC && inP;
      });
      switch (sortSel.value){
        case 'price-asc': items.sort((a,b)=>a.price-b.price); break;
        case 'price-desc': items.sort((a,b)=>b.price-a.price); break;
        case 'new': items.sort((a,b)=> Number(b.new) - Number(a.new)); break;
        default: items.sort((a,b)=> (b.rating*b.reviewCount) - (a.rating*a.reviewCount));
      }
      return items;
    }

    function renderStars(val){
      const rounded = Math.round(val);
      return Array.from({length:5}).map((_,i)=>`
        <svg viewBox="0 0 24 24" ${i<rounded? 'fill="gold" stroke="gold"' : 'fill="none" stroke="gold"'}>
          <polygon points="12 2 15 9 22 9 17 14 19 21 12 17 5 21 7 14 2 9 9 9"/>
        </svg>`).join('') + `<span class="muted">${val.toFixed(1)}</span>`;
    }

    function render(){
      const items = getFiltered();
      grid.innerHTML = '';
      empty.hidden = items.length !== 0;
      items.forEach(p=>{
        const card = tpl.content.firstElementChild.cloneNode(true);
        const img = qs('img', card); img.src = p.img; img.alt = p.title;
        qs('.badge', card).textContent = p.badge || '';
        const oos = qs('.oos', card); oos.hidden = !!p.inStock;
        qs('.title-2', card).textContent = p.title;
        qs('.category', card).textContent = p.category;
        qs('.price', card).textContent = rupee(p.price);
        qs('.stars', card).innerHTML = renderStars(p.rating);
        const colorsWrap = qs('.colors', card);
        colorsWrap.innerHTML = p.colors.map(c=>`<span class="dot" style="background:${c}"></span>`).join('');

        // Wishlist button
        const likeBtn = qs('.like', card);
        const liked = wishlist.has(p.id);
        likeBtn.classList.toggle('liked', liked);
        likeBtn.setAttribute('aria-pressed', liked);
        likeBtn.addEventListener('click', ()=>{
          if (wishlist.has(p.id)) wishlist.delete(p.id); else wishlist.add(p.id);
          render();
        });

        // Cart button
        qs('.cart', card).addEventListener('click', ()=>{
          alert(`Added to cart: ${p.title} — ${rupee(p.price)}`);
        });

        grid.appendChild(card);
      });
    }

    // Initial
    render();
  </script>
</body>
</html>
